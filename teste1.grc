var v[10]: int;
var s[15] : int;

// Procedimento de ordenação por troca
// Observe como um parâmetro de arranjo é declarado

def bubblesort(v[]: int; n: int) {
    var i=0, j: int;
    var trocou = true: bool;

    while (i < n-1 && trocou) {
        trocou = false;
        for (j=0; j<(n-i-1); j+=1) {
            if (v[j] > v[j+1]) {
                var aux = v[j]: int;
                v[j] = v[j+1];
                v[j+1] = aux;
                trocou = true;
            }
        }
        i += 1;
    }
}

def quickSort(vetor[], inicio, fim: int){
   
   var pivo, aux, i, j, meio: int;
   
   i = inicio;
   j = fim;
   
   meio = ((i + j) / 2);
   pivo = vetor[meio];

    while (vetor[i] < pivo) i = i + 1;
    while (vetor[j] > pivo) j = j - 1;

    if(i <= j){
         aux = vetor[i];
         vetor[i] = vetor[j];
         vetor[j] = aux;
         i = i + 1;
         j = j - 1;
      }
   
   while(j > i){
      while (vetor[i] < pivo) i = i + 1;
      while (vetor[j] > pivo) j = j - 1;
      
      if(i <= j){
         aux = vetor[i];
         vetor[i] = vetor[j];
         vetor[j] = aux;
         i = i + 1;
         j = j - 1;
      }
   }
   
   if(inicio < j) quickSort(vetor, inicio, j);
   if(i < fim) quickSort(vetor, i, fim);  

}


def soma(v[]: int): int{
    var total i : int;
    for (i=0; i<10; i+=1) {
        total+=v[i];
    }

    return total;
}

def main(): int {
    var i: int;
    var sum : int;

    write "Digite os valores do arranjo V:\n";

    for (i=0; i<10; i+=1) {
        write "V[", i, "] = ";
        read v[i];
    }

    bubblesort(v, 10);

    write "Arranjo ordenado por BubbleSort:\nV = ";

    for (i=0; i<10; i+=1) {
        write v[i], " ";
    }


    write "Digite as strings do arranjo S:\n";

    for (i=0; i<15; i = i+1){
        write "S[", i, "] = ";
        read s[i];
    }

    quickSort(s, 0, 9);

    write "Arranjo ordenado por QuickSort:\nS = ";

    for (i=0; i<10; i+=1) {
        write s[i], " ";
    }

    write "Somando os valores do arranjo V\n";

    sum = soma(v);

}